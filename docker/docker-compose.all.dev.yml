services:
  # フロントエンド (Next.js)
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/dockerfile.frontend.dev
    image: buildsuite-frontend-dev:latest
    container_name: buildsuite-frontend-container
    volumes:
      - ../frontend:/app
      - /app/.next
    expose:
      - '3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - buildsuite-network

  # バックエンド (Laravel)
  backend:
      build:
        context: ../backend           # Laravel ソースがあるディレクトリ
        dockerfile: ../docker/dockerfile.backend.dev
      image: buildsuite-backend:dev
      container_name: buildsuite-backend-container
      # ユーザーマッピングを追加（コメントアウト - 権限問題回避のため）
      # user: "${UID:-1000}:${GID:-1000}"
      env_file:
        - ../backend/.env # Laravelの.envファイルを指定
      environment:
          - APP_ENV=local
          - APP_DEBUG=true
          - HOST_UID=${UID:-1000}
          - HOST_GID=${GID:-1000}
      networks:
          - buildsuite-network  # 追加: Nginxと通信できるようにする
      volumes:
      - ../backend:/var/www/html  # 開発環境ではソースコード全体をマウント
      expose:
        - "9000"
      depends_on:
          - redis
          - meilisearch
      healthcheck:
          test: ["CMD", "php-fpm", "-t"]
          interval: 30s
          timeout: 10s
          retries: 3

      # 改善されたコマンド：権限設定を安全に実行
      command: bash -c "
        echo 'Setting up permissions...' &&
        chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true &&
        chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true &&
        if [ ! -z \"\$HOST_UID\" ] && [ ! -z \"\$HOST_GID\" ]; then
          echo 'Updating www-data user to match host UID/GID...' &&
          echo 'Current www-data:' && id www-data &&
          usermod -u \$HOST_UID www-data &&
          groupmod -g \$HOST_GID www-data &&
          echo 'Updated www-data:' && id www-data &&
          chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache 2>/dev/null || true &&
          echo 'Setting default umask for shared file access...' &&
          echo 'umask 002' >> /etc/profile;
        fi &&
        if php artisan migrate:status | grep -q 'No'; then
          echo 'Running migrations';
          php artisan migrate --force;
        else
          echo 'Migrations already up to date';
        fi &&
        echo 'Starting PHP-FPM...' &&
        php-fpm"

  nginx:
    image: nginx:alpine
    container_name: buildsuite-nginx-container
    ports:
        - "8080:80"
    volumes:
        - ../backend:/var/www/html
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
        - buildsuite-network
    depends_on:
        - backend
        - frontend 

  redis:
      image: 'redis:alpine'
      ports:
          - '6379:6379'
      volumes:
          - 'sail-redis:/data'
      networks:
          - buildsuite-network
      healthcheck:
          test:
              - CMD
              - redis-cli
              - ping
          retries: 3
          timeout: 5s

  meilisearch:
      image: 'getmeili/meilisearch:latest'
      ports:
          - '7700:7700'
      environment:
          MEILI_NO_ANALYTICS: 'false'
      volumes:
          - 'sail-meilisearch:/meili_data'
      networks:
          - buildsuite-network
      healthcheck:
          test:
              - CMD
              - wget
              - '--no-verbose'
              - '--spider'
              - 'http://127.0.0.1:7700/health'
          retries: 3
          timeout: 5s


volumes:
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local


networks:
  buildsuite-network:
    external: true
